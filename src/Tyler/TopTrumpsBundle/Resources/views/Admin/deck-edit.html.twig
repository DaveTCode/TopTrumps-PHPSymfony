<!DOCTYPE html>
<html>
    <head>
        {% block stylesheets %}
            <link href='http://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
            <link rel="stylesheet" type="text/css" href="{{ asset('bundles/tylertoptrumps/css/main.css') }}">
            <link rel="stylesheet" type="text/css" href="{{ asset('bundles/tylertoptrumps/css/sidebar.css') }}">
            <link rel="stylesheet" type="text/css" href="{{ asset('bundles/tylertoptrumps/css/card.css') }}">
        {% endblock %}

        <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
        <script src="{{ path('fos_js_routing_js', {"callback": "fos.Router.setData"}) }}"></script>
        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
        <script type="text/javascript" src="{{ asset('bundles/tylertoptrumps/js/jquery.watermark.min.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/tylertoptrumps/js/jquery.blockUI.js') }}"></script>

        <script type="text/javascript">
            $(document).ready(function() {
                $(document).ajaxStop($.unblockUI);

                $('#card-name-input').watermark('Card name');
                $('#card-description-input').watermark('Card description');

                $('#card-list').on('click', '.card-list-element', function() {
                    var cardId = $(this).attr('id').replace('card-', '');

                    DeckEdit.selectCard(cardId);
                });

                $("#new-card-list-element").click(DeckEdit.newCard);

                $("#card-image").click(function() {
                    /*
                     * An input element has to be visible with focus before the
                     * click event will fire on it.
                     */
                    $("#card-image-input").show().focus().click().hide();
                });

                {% if card != null %}
                DeckEdit.selectCard({{ card.id }});
                {% else %}
                DeckEdit.newCard();
                {% endif %}
            });

            var DeckEdit = {
                deckId: {{ deck.id }},

                selectCard: function(cardId) {
                    $.blockUI({ message: 'Processing...'});
                    $.get(Routing.generate('json_card_view', {'deckId': DeckEdit.deckId, 'cardId': cardId}))
                     .done(DeckEdit.loadCardData);
                },

                newCard: function() {
                    $(".card-list-element").removeClass("selected-card-list-element");
                    $("#card-name-input").val("");
                    $("#card-description-input").val("");
                    $("#card-image-input").val("");
                    $(".card-stat-select").val($(".card-stat-select option:first").val());
                    $("#save-button").off("click").on("click", function() {
                        DeckEdit.submitCardData();
                    });
                    $("#delete-button").off("click").addClass("disabled");
                },

                loadCardData: function(card) {
                    $("#card-name-input").val(card.name);
                    $("#card-description-input").val(card.description);
                    card.stat_values = card.stat_values ? card.stat_values : [];

                    $(".card-stat-select").val($(".card-stat-select option:first").val());
                    for (var ii = 0; ii < card.stat_values.length; ii++) {
                        var statValue = card.stat_values[ii];
                        $("#stat-id-" + statValue.stat.id).find("select").val(statValue.value);
                    }

                    $(".card-list-element").removeClass("selected-card-list-element");
                    $("#card-" + card.id).addClass("selected-card-list-element");

                    $("#save-button").off("click").on("click", function() {
                        DeckEdit.submitCardData(card.id);
                    });
                    $("#delete-button").off("click").on("click", function() {
                        DeckEdit.deleteCard(card.id);
                    }).removeClass("disabled");
                },

                submitCardData: function(cardId) {
                    var card = {};

                    card.name = $("#card-name-input").val();
                    card.description = $("#card-description-input").val();
                    card.stat_values = [];

                    $(".card-stat").each(function() {
                        var statValue = {};
                        statValue.id = $(this).attr("id").replace("stat-id-", "");
                        statValue.value = $(this).find("select").val();

                        card.stat_values.push(statValue);
                    });

                    var url = null;
                    if (cardId) {
                        url = Routing.generate('json_card_update', {'deckId': DeckEdit.deckId, 'cardId': cardId});
                    } else {
                        url = '{{ path('json_card_create', {'deckId': deck.id}) }}';
                    }
                    $.blockUI({ message: 'Processing...' });
                    $.post(url, card)
                     .done(DeckEdit.cardSubmitComplete)
                     .error(function() { alert("Failed"); });
                },

                deleteCard: function(cardId) {
                    var url = Routing.generate('json_card_delete', { 'deckId': DeckEdit.deckId, 'cardId': cardId });

                    $.blockUI({ message: 'Processing...' });
                    $.ajax({ "url": url, "method": "DELETE" })
                     .done(function(card) { DeckEdit.deleteCardComplete(cardId, card) } )
                     .error(function() { alert("Failed"); });
                },

                deleteCardComplete: function(cardId, card) {
                    $('#card-' + cardId).remove();
                },

                cardSubmitComplete: function(card) {
                    /*
                     * Replace the name of the card if it already exists in the
                     * card list. Otherwise add the new card to the end of the
                     * list.
                     */
                    var cardId = "card-" + card.id;
                    var existingCard = $("#" + cardId);
                    if (existingCard.length) {
                        existingCard.html(card.name);
                    } else {
                        $("#new-card-list-element").before("<li id='" + cardId + "' class='card-list-element'>" + card.name + "</li>");
                    }
                }
            }
        </script>

        <title>Deck edit</title>
    </head>
    <body>
        <div id="header">
            <h1>{{ deck.name }}</h1>
        </div>
        <div id="content">
            <div id="sidebar">
                <ul id="card-list">
                    {% for card in deck.cards %}
                        <li id="card-{{ card.id }}" class="card-list-element">{{ card.name }}</li>
                    {% endfor %}
                    <li id="new-card-list-element">New card</li>
                </ul>
            </div>
            <div id="main-content">
                <div id="card-container">
                    <div id="card-image-container">
                        <img id="card-image" src="{{ asset('bundles/tylertoptrumps/images/no-card-image.png') }}" alt="No Image Selected" height="250" width="250">
                    </div>
                    <input type="file" id="card-image-input" class="hidden" />
                    <div id="card-name-container">
                        <input type="text" id="card-name-input" title="Enter the cards name (max 50 chars)" value="" />
                    </div>
                    <div id="card-description-container">
                        <textarea id="card-description-input" title="Enter the cards description (max 250 chars)"></textarea>
                    </div>
                    <div id="card-stat-container">
                        {% for cardStat in deck.stats %}
                            <div class="card-stat" id="stat-id-{{ cardStat.id }}">
                                <span class="card-stat-text">{{ cardStat.name }}</span>
                                <select class="card-stat-select">
                                    {% for value in range(cardStat.min, cardStat.max) %}
                                        <option value="{{ value }}">{{ value }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        {% endfor %}
                    </div>
                </div>
                <div id="button-container">
                    <a href="#" id="delete-button" class="action-button">Delete</a>
                    <a href="#" id="save-button" class="action-button">Save</a>
                </div>
                <div class="clear"></div>
            </div>
        </div>
        <div id="footer" class="clear">&nbsp;</div>
        <div id="loading" class="hidden">
            <img src="{{ asset('bundles/tylertoptrumps/images/loading.gif') }}" alt="Loading...">
        </div>
    </body>
</html>