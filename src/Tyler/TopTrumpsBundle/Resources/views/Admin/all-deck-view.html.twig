<!DOCTYPE html>
<html>
    <head>
        {% block stylesheets %}
            <link href='http://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
            <link rel="stylesheet" type="text/css" href="{{ asset('bundles/tylertoptrumps/css/main.css') }}">
            <link rel="stylesheet" type="text/css" href="{{ asset('bundles/tylertoptrumps/css/all-deck-view.css') }}">
            <link rel="stylesheet" type="text/css" href="{{ asset('bundles/tylertoptrumps/css/deck-form.css') }}">
            <link rel="stylesheet" type="text/css" href="{{ asset('bundles/tylertoptrumps/css/jquery-ui-1.10.3.custom.css') }}">
        {% endblock %}

        <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
        <script src="{{ path('fos_js_routing_js', {"callback": "fos.Router.setData"}) }}"></script>
        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
        <script type="text/javascript" src="{{ asset('bundles/tylertoptrumps/js/jquery.blockUI.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/tylertoptrumps/js/jquery.history.min.js') }}"></script>
        <script type="text/javascript" src="{{ asset('bundles/tylertoptrumps/js/admin-common.js') }}"></script>

        <script type="text/javascript">
            $(document).ready(function() {
                $(".deck").each(function() {
                    var deckId = $(this).attr('id').replace('deck-', '');
                    var $deckImage = $(this).find('.deck-image');
                    var $textOverlay = $(this).find('.deck-text-overlay');

                    $deckImage.attr('src', Routing.generate('json_deck_image', { 'deckId': deckId }))
                              .click(function() {
                                         $.get(Routing.generate('json_deck_view', {'deckId': deckId}), 
                                               AllDeckView.loadDeckIntoForm);
                                     })
                              .hover(function() { 
                                         $textOverlay.show(); 
                                         $deckImage.addClass("grayscale");
                                     },
                                     function() { 
                                         $textOverlay.hide(); 
                                         $deckImage.removeClass("grayscale"); 
                                     });
                    $textOverlay.hover(function() { 
                                           $textOverlay.show();
                                           $deckImage.addClass("grayscale");
                                       }, 
                                       function() {
                                           $textOverlay.hide();
                                           $deckImage.removeClass("grayscale");
                                       });
                });

                $("#deck-form-area").dialog({
                    autoOpen: false,
                    height: 600,
                    minHeight: 600,
                    width: 420,
                    minWidth: 420,
                    maxWidth: 420,
                    modal: true
                });

                $("#deck-form-stat-area").on("click", ".stat-delete-button", function() {
                    $(this).parent(".deck-form-single-stat-input-area").remove();

                    return false;
                });

                $("#new-stat-button").click(function() { AllDeckView.createStatInputArea(); return false; });

                
                $("#new-button").click(function() { 
                    $("#deck-form-area").dialog("option", {
                                                    'buttons': {
                                                        "Cancel": function() {
                                                            $(this).dialog("close");
                                                        },
                                                        "Create Deck": function() {
                                                            AllDeckView.submitDeckForm();
                                                        }
                                                    }
                                                })
                                        .dialog("open"); 
                });

                /*
                 * An input element has to be visible with focus before the
                 * click event will fire on it.
                 */
                $("#deck-form-image").click(function() { $("#deck-image-input").show().focus().click().hide(); });

                $("#deck-image-input").on("change", function() { 
                    TopTrumpsCommon.loadImageBytes("#deck-image-input", "#deck-form-image"); 
                });

                $("#deck-form-stat-area").on("change", ".stat-min-input", function() {
                    var $maxElement = $(this).siblings(".stat-max-input");
                    $maxElement.attr('min', $(this).val());
                    $maxElement.val(Math.max($(this).val(), $maxElement.val()));

                });

                $("#deck-form-stat-area").on("change", ".stat-max-input", function() {
                    var $minElement = $(this).siblings(".stat-min-input");
                    $minElement.attr('max', $(this).val());
                    $minElement.val(Math.min($(this).val(), $minElement.val()));
                });

                AllDeckView.setupJQueryUIButtons();
                AllDeckView.createStatInputArea();
            });

            AllDeckView = {
                setupJQueryUIButtons: function() {
                    $("#filter-button").button();
                    $("#new-button").button();

                    $(".stat-delete-button").button({
                        text: false,
                        icons: {
                            primary: "ui-icon-circle-minus"
                        }
                    });

                    $("#new-stat-button").button({
                        text: false,
                        icons: {
                            primary: "ui-icon-circle-plus"
                        }
                    });
                },

                createStatInputArea: function(stat) {
                    var statHtml = '<div class="deck-form-single-stat-input-area">';
                    statHtml += '<input class="stat-id-input hidden" type="text" value="' + (stat ? stat.id : '') + '"/>';
                    statHtml += '<input class="stat-name-input" type="text" placeholder="Stat name" value="' + (stat ? stat.name : '') + '" />';
                    statHtml += '<input class="stat-min-input" type="number" value="' + (stat ? stat.min : '1') + '"/>';
                    statHtml += '<input class="stat-max-input" type="number" value="' + (stat ? stat.max : '1') + '"/>';
                    statHtml += '<button class="stat-delete-button">Delete</button>';
                    statHtml += '</div>';

                    $("#new-stat-button").before(statHtml);
                    AllDeckView.setupJQueryUIButtons();
                },

                clearForm: function() {
                    $("#deck-form")[0].reset();
                    $(".deck-form-single-stat-input-area").remove();
                    $("#deck-id-input").val("");
                    $("#deck-form-image").attr("src", "{{ asset('bundles/tylertoptrumps/images/no-deck-image.png') }}");

                    $("#deck-form-area").find(".invalid").each(function() {
                        $(this).removeClass("invalid");
                    });
                },

                submitDeckForm: function() {
                    var deck = {};
                    var $deckId = $("#deck-id-input").val();
                    if ($deckId !== "") {
                        deck.id = $deckId;
                    }
                    deck.name = $("#deck-name-input").val();
                    deck.description = $("#deck-description-input").val();
                    deck.image = $("#deck-form-image").attr("src");
                    deck.stats = [];

                    $("#deck-form-stat-area").find(".deck-form-single-stat-input-area").each(function() {
                        var stat = {};
                        var $statId = $(this).find(".stat-id-input").val();
                        if ($statId !== "") {
                            stat.id = $statId;
                        }
                        stat.name = $(this).find(".stat-name-input").val();
                        stat.min = $(this).find(".stat-min-input").val();
                        stat.max = $(this).find(".stat-max-input").val();

                        deck.stats.push(stat);
                    });

                    if (AllDeckView.validateDeckForm(deck)) {
                        var url;
                        if (deck.id) {
                            url = Routing.generate('json_deck_update', {'deckId': deck.id});
                        } else {
                            url = '{{ path('json_deck_create') }}';
                        }

                        $.post(url, deck)
                         .done(AllDeckView.deckSubmitComplete)
                         .error(function() { alert("Failed."); });
                    }
                },

                loadDeckIntoForm: function(deck) {
                    AllDeckView.clearForm();
                    $("#deck-id-input").val(deck.id);
                    $("#deck-name-input").val(deck.name);
                    $("#deck-description-input").val(deck.description);
                    $("#deck-form-image").attr('src', Routing.generate('json_deck_image', { 'deckId': deck.id }));

                    if (deck.stats) {
                        for (var ii = 0; ii < deck.stats.length; ii++) {
                            AllDeckView.createStatInputArea(deck.stats[ii]);
                        }
                    }

                    $("#deck-form-area").dialog('option', {
                                                    "buttons": {
                                                        "Remove": function() {
                                                            AllDeckView.removeDeck(deck.id);
                                                        },
                                                        "Cancel": function() {
                                                            $(this).dialog("close");
                                                        },
                                                        "Update Deck": function() {
                                                            AllDeckView.submitDeckForm();
                                                        }
                                                    }
                                                })
                                        .dialog("open");
                },

                validateDeckForm: function(deck) {
                    var valid = true;

                    if (deck.name === null || deck.name.length === 0) {
                        $("#deck-name-input").addClass("invalid");
                        valid = false;
                    }

                    if (deck.description === null || deck.description.length === 0) {
                        $("#deck-description-input").addClass("invalid");
                        valid = false;
                    }

                    $(".stat-name-input").each(function() {
                        if ($(this).val() === null || $(this).val().length === 0) {
                            $(this).addClass("invalid");
                            valid = false;
                        }
                    })

                    return valid;
                },

                deckSubmitComplete: function(deck) {
                    AllDeckView.clearForm();
                    $("#deck-form-area").dialog("close");
                },

                removeDeck: function(deckId) {
                    if (confirm("Are you sure you want to remove the deck")) {
                        $.ajax({ "url": Routing.generate('json_deck_delete', { 'deckId': deckId }), "method": "DELETE"})
                         .done(AllDeckView.deckRemoveComplete)
                         .error(function() { alert("Failed"); });
                    }
                },

                deckRemoveComplete: function() {
                    location.reload();
                }
            }
        </script>

        <title>View all decks</title>
    </head>
    <body>
        <div id="header">
            <h1>View all decks</h1>
        </div>
        <div id="adjustment-bar">
            <div id="new-button-area">
                <a href="#" id="new-button">New</a>
            </div>
            <div id="search-form">
                <input id="filter" type="text" placeholder="Filter" />
                <button id="filter-button">Search</button>
            </div>
        </div>
        <div id="content">
            {% for deck in decks %}
                <div id="deck-{{ deck.id }}" class="deck">
                    <div class="deck-image-container">
                        <img class="deck-image" alt="No image for this deck" src="{{ asset('bundles/tylertoptrumps/images/no-deck-image.png') }}" />
                    </div>
                    <div class="deck-text-overlay">
                        <div class="deck-name">
                            {{ deck.name|e }}
                        </div>
                        <div class="deck-description">
                            {{ deck.description|e }}
                        </div>
                        <div class="deck-stat-container">
                            {% for stat in deck.stats %}
                                <div id="deck-stat-{{ stat.id }}" class="deck-stat">
                                    <span class="deck-stat-name">{{ stat.name|e }}: </span>
                                    <span class="deck-stat-min">{{ stat.min }}</span> to
                                    <span class="deck-stat-max">{{ stat.max }}</span>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
        <div id="footer" class="clear">&nbsp;</div>
        <div id="loading" class="hidden">
            <img src="{{ asset('bundles/tylertoptrumps/images/loading.gif') }}" alt="Loading...">
        </div>
        <div id="deck-form-area" class="hidden">
            <form id="deck-form" method="post">
                <input type="text" id="deck-id-input" class="hidden" />
                <img id="deck-form-image" src="{{ asset('bundles/tylertoptrumps/images/no-deck-image.png') }}" alt="No image" height="250" width="180">
                <input type="file" id="deck-image-input" class="hidden" accept="image/png,image/jpg,image/jpeg,image/gif"/>
                <input type="text" placeholder="Name" name="name" id="deck-name-input" />
                <textarea name="description" id="deck-description-input" placeholder="Description"></textarea>
                <div id="deck-form-stat-area">
                    <fieldset>
                        <legend>Stats</legend>
                        <button id="new-stat-button">New Stat</button>
                    </fieldset>
                </div>
            </form>
        </div>
    </body>
</html>